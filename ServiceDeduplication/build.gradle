import nu.studer.gradle.jooq.JooqEdition
import org.jooq.meta.jaxb.Logging

plugins {
    id 'java'
    id 'application'
    id 'nu.studer.jooq' version '9.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

application {
    mainClass = 'ru.mai.lessons.rpks.ServiceDeduplicationMain'
}

shadowJar {
    archiveBaseName.set(rootProject.name)
    archiveVersion.set('')
    archiveClassifier.set('')
}

dependencies {
    // kafka
    implementation 'org.apache.kafka:kafka-clients:3.7.0'

    // logging
    implementation 'ch.qos.logback:logback-classic:1.4.5'

    // code generator
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // configuration
    implementation 'com.typesafe:config:1.4.2'

    // databases
    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.jooq:jooq:3.19.1'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    jooqGenerator 'org.postgresql:postgresql:42.5.4'

    // redis
    implementation 'redis.clients:jedis:4.3.1'

    // json
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    // test
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation "org.testcontainers:junit-jupiter:1.17.6"
    testImplementation "org.testcontainers:kafka:1.17.6"
    testImplementation "org.testcontainers:postgresql:1.17.6"
    testCompileOnly "org.projectlombok:lombok:1.18.32"
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.apache.kafka:kafka-clients:3.4.0'
    testImplementation 'com.redis.testcontainers:testcontainers-redis-junit:1.6.2'

    // annotations
    implementation 'org.jetbrains:annotations:24.0.1'
}

test {
    useJUnitPlatform()
}

// jooq-codegen configs

jooq {
    version = '3.19.1'
    edition = JooqEdition.OSS
    configurations {
        jooqcodegen {
            generateSchemaSourceOnCompilation = false
            generationTool {
                logging = Logging.INFO
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/data_bus'
                    user = 'eflerrr'
                    password = '45678'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = false
                        daos = false
                        pojos = true
                        constructorPropertiesAnnotation = true
                        constructorPropertiesAnnotationOnPojos = true
                        constructorPropertiesAnnotationOnRecords = true
                        generatedAnnotation = true
                        generatedAnnotationDate = false
                        nullableAnnotation = true
                        nullableAnnotationType = 'org.jetbrains.annotations.Nullable'
                        nonnullAnnotation = true
                        nonnullAnnotationType = 'org.jetbrains.annotations.NotNull'
                        jpaAnnotations = false
                    }
                    target {
                        packageName = 'jooqcodegen'
                        directory = 'src/main/java/generated'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}
