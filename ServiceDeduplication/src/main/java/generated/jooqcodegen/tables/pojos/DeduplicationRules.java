/*
 * This file is generated by jOOQ.
 */
package generated.jooqcodegen.tables.pojos;


import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import javax.annotation.processing.Generated;
import java.beans.ConstructorProperties;
import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "https://www.jooq.org",
                "jOOQ version:3.19.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class DeduplicationRules implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long deduplicationId;
    private final Long ruleId;
    private final String fieldName;
    private final Long timeToLiveSec;
    private final Boolean isActive;

    public DeduplicationRules(DeduplicationRules value) {
        this.id = value.id;
        this.deduplicationId = value.deduplicationId;
        this.ruleId = value.ruleId;
        this.fieldName = value.fieldName;
        this.timeToLiveSec = value.timeToLiveSec;
        this.isActive = value.isActive;
    }

    @ConstructorProperties({"id", "deduplicationId", "ruleId", "fieldName", "timeToLiveSec", "isActive"})
    public DeduplicationRules(
            @Nullable Integer id,
            @NotNull Long deduplicationId,
            @NotNull Long ruleId,
            @NotNull String fieldName,
            @NotNull Long timeToLiveSec,
            @NotNull Boolean isActive
    ) {
        this.id = id;
        this.deduplicationId = deduplicationId;
        this.ruleId = ruleId;
        this.fieldName = fieldName;
        this.timeToLiveSec = timeToLiveSec;
        this.isActive = isActive;
    }

    /**
     * Getter for <code>public.deduplication_rules.id</code>.
     */
    @Nullable
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.deduplication_rules.deduplication_id</code>.
     */
    @NotNull
    public Long getDeduplicationId() {
        return this.deduplicationId;
    }

    /**
     * Getter for <code>public.deduplication_rules.rule_id</code>.
     */
    @NotNull
    public Long getRuleId() {
        return this.ruleId;
    }

    /**
     * Getter for <code>public.deduplication_rules.field_name</code>.
     */
    @NotNull
    public String getFieldName() {
        return this.fieldName;
    }

    /**
     * Getter for <code>public.deduplication_rules.time_to_live_sec</code>.
     */
    @NotNull
    public Long getTimeToLiveSec() {
        return this.timeToLiveSec;
    }

    /**
     * Getter for <code>public.deduplication_rules.is_active</code>.
     */
    @NotNull
    public Boolean getIsActive() {
        return this.isActive;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DeduplicationRules other = (DeduplicationRules) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        } else if (!this.id.equals(other.id))
            return false;
        if (this.deduplicationId == null) {
            if (other.deduplicationId != null)
                return false;
        } else if (!this.deduplicationId.equals(other.deduplicationId))
            return false;
        if (this.ruleId == null) {
            if (other.ruleId != null)
                return false;
        } else if (!this.ruleId.equals(other.ruleId))
            return false;
        if (this.fieldName == null) {
            if (other.fieldName != null)
                return false;
        } else if (!this.fieldName.equals(other.fieldName))
            return false;
        if (this.timeToLiveSec == null) {
            if (other.timeToLiveSec != null)
                return false;
        } else if (!this.timeToLiveSec.equals(other.timeToLiveSec))
            return false;
        if (this.isActive == null) {
            if (other.isActive != null)
                return false;
        } else if (!this.isActive.equals(other.isActive))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.deduplicationId == null) ? 0 : this.deduplicationId.hashCode());
        result = prime * result + ((this.ruleId == null) ? 0 : this.ruleId.hashCode());
        result = prime * result + ((this.fieldName == null) ? 0 : this.fieldName.hashCode());
        result = prime * result + ((this.timeToLiveSec == null) ? 0 : this.timeToLiveSec.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DeduplicationRules (");

        sb.append(id);
        sb.append(", ").append(deduplicationId);
        sb.append(", ").append(ruleId);
        sb.append(", ").append(fieldName);
        sb.append(", ").append(timeToLiveSec);
        sb.append(", ").append(isActive);

        sb.append(")");
        return sb.toString();
    }
}
