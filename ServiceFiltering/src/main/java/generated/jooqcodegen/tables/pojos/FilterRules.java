/*
 * This file is generated by jOOQ.
 */
package generated.jooqcodegen.tables.pojos;


import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import javax.annotation.processing.Generated;
import java.beans.ConstructorProperties;
import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "https://www.jooq.org",
                "jOOQ version:3.19.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class FilterRules implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long filterId;
    private final Long ruleId;
    private final String fieldName;
    private final String filterFunctionName;
    private final String filterValue;

    public FilterRules(FilterRules value) {
        this.id = value.id;
        this.filterId = value.filterId;
        this.ruleId = value.ruleId;
        this.fieldName = value.fieldName;
        this.filterFunctionName = value.filterFunctionName;
        this.filterValue = value.filterValue;
    }

    @ConstructorProperties({"id", "filterId", "ruleId", "fieldName", "filterFunctionName", "filterValue"})
    public FilterRules(
            @Nullable Integer id,
            @NotNull Long filterId,
            @NotNull Long ruleId,
            @NotNull String fieldName,
            @NotNull String filterFunctionName,
            @NotNull String filterValue
    ) {
        this.id = id;
        this.filterId = filterId;
        this.ruleId = ruleId;
        this.fieldName = fieldName;
        this.filterFunctionName = filterFunctionName;
        this.filterValue = filterValue;
    }

    /**
     * Getter for <code>public.filter_rules.id</code>.
     */
    @Nullable
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.filter_rules.filter_id</code>.
     */
    @NotNull
    public Long getFilterId() {
        return this.filterId;
    }

    /**
     * Getter for <code>public.filter_rules.rule_id</code>.
     */
    @NotNull
    public Long getRuleId() {
        return this.ruleId;
    }

    /**
     * Getter for <code>public.filter_rules.field_name</code>.
     */
    @NotNull
    public String getFieldName() {
        return this.fieldName;
    }

    /**
     * Getter for <code>public.filter_rules.filter_function_name</code>.
     */
    @NotNull
    public String getFilterFunctionName() {
        return this.filterFunctionName;
    }

    /**
     * Getter for <code>public.filter_rules.filter_value</code>.
     */
    @NotNull
    public String getFilterValue() {
        return this.filterValue;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FilterRules other = (FilterRules) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        } else if (!this.id.equals(other.id))
            return false;
        if (this.filterId == null) {
            if (other.filterId != null)
                return false;
        } else if (!this.filterId.equals(other.filterId))
            return false;
        if (this.ruleId == null) {
            if (other.ruleId != null)
                return false;
        } else if (!this.ruleId.equals(other.ruleId))
            return false;
        if (this.fieldName == null) {
            if (other.fieldName != null)
                return false;
        } else if (!this.fieldName.equals(other.fieldName))
            return false;
        if (this.filterFunctionName == null) {
            if (other.filterFunctionName != null)
                return false;
        } else if (!this.filterFunctionName.equals(other.filterFunctionName))
            return false;
        if (this.filterValue == null) {
            if (other.filterValue != null)
                return false;
        } else if (!this.filterValue.equals(other.filterValue))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.filterId == null) ? 0 : this.filterId.hashCode());
        result = prime * result + ((this.ruleId == null) ? 0 : this.ruleId.hashCode());
        result = prime * result + ((this.fieldName == null) ? 0 : this.fieldName.hashCode());
        result = prime * result + ((this.filterFunctionName == null) ? 0 : this.filterFunctionName.hashCode());
        result = prime * result + ((this.filterValue == null) ? 0 : this.filterValue.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FilterRules (");

        sb.append(id);
        sb.append(", ").append(filterId);
        sb.append(", ").append(ruleId);
        sb.append(", ").append(fieldName);
        sb.append(", ").append(filterFunctionName);
        sb.append(", ").append(filterValue);

        sb.append(")");
        return sb.toString();
    }
}
