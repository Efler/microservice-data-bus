/*
 * This file is generated by jOOQ.
 */
package generated.jooqcodegen.tables.records;


import generated.jooqcodegen.tables.FilterRules;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.beans.ConstructorProperties;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "https://www.jooq.org",
                "jOOQ version:3.19.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class FilterRulesRecord extends UpdatableRecordImpl<FilterRulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.filter_rules.id</code>.
     */
    public void setId(@Nullable Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.filter_rules.id</code>.
     */
    @Nullable
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.filter_rules.filter_id</code>.
     */
    public void setFilterId(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.filter_rules.filter_id</code>.
     */
    @NotNull
    public Long getFilterId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.filter_rules.rule_id</code>.
     */
    public void setRuleId(@NotNull Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.filter_rules.rule_id</code>.
     */
    @NotNull
    public Long getRuleId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.filter_rules.field_name</code>.
     */
    public void setFieldName(@NotNull String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.filter_rules.field_name</code>.
     */
    @NotNull
    public String getFieldName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.filter_rules.filter_function_name</code>.
     */
    public void setFilterFunctionName(@NotNull String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.filter_rules.filter_function_name</code>.
     */
    @NotNull
    public String getFilterFunctionName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.filter_rules.filter_value</code>.
     */
    public void setFilterValue(@NotNull String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.filter_rules.filter_value</code>.
     */
    @NotNull
    public String getFilterValue() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilterRulesRecord
     */
    public FilterRulesRecord() {
        super(FilterRules.FILTER_RULES);
    }

    /**
     * Create a detached, initialised FilterRulesRecord
     */
    @ConstructorProperties({"id", "filterId", "ruleId", "fieldName", "filterFunctionName", "filterValue"})
    public FilterRulesRecord(@Nullable Integer id, @NotNull Long filterId, @NotNull Long ruleId, @NotNull String fieldName, @NotNull String filterFunctionName, @NotNull String filterValue) {
        super(FilterRules.FILTER_RULES);

        setId(id);
        setFilterId(filterId);
        setRuleId(ruleId);
        setFieldName(fieldName);
        setFilterFunctionName(filterFunctionName);
        setFilterValue(filterValue);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FilterRulesRecord
     */
    public FilterRulesRecord(generated.jooqcodegen.tables.pojos.FilterRules value) {
        super(FilterRules.FILTER_RULES);

        if (value != null) {
            setId(value.getId());
            setFilterId(value.getFilterId());
            setRuleId(value.getRuleId());
            setFieldName(value.getFieldName());
            setFilterFunctionName(value.getFilterFunctionName());
            setFilterValue(value.getFilterValue());
            resetChangedOnNotNull();
        }
    }
}
